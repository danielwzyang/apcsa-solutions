public int maxBlock(String str) {
    // max is what we will return
    int max = 0;
    // count is our current count and we will update max based on count
    int count = 0;

    // loops through the indexes of the string
    for (int i = 0; i < str.length(); i++) {
        // if the current character is the same as the last character then we add to the count
        // we do this if the character is the first character as well because there's no character before it 
        // this prevents an out of bounds error with str.charAt(i - 1)
        if (i == 0 || str.charAt(i) == str.charAt(i - 1)) {
            count += 1;
        } else {
            // if the character isn't the same as the last, we set the count to 1
            // we don't set it to 0 because we need to count the current character
            count = 1;
        }
        
        // we only update max if the count is greater than the max
        if (count > max) {
            max = count;
        }
    }
    return max;
}